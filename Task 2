import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

data = pd.read_csv("Advertising.csv")

data.head()

data.info()

data.shape

data.isnull().sum()

data.describe()

data.columns

data.drop(['Unnamed: 0'],axis=1,inplace=True)

if 'Unnamed: 0' in data.columns:
    data.drop(['Unnamed: 0'], axis=1, inplace=True)

data.columns

data.head()

data.info()

X = data[['TV']]
Y = data['Sales']

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 42)

from sklearn.linear_model import LinearRegression
data_regressor = LinearRegression()
data_regressor.fit(X_train, Y_train)

Y_prediction = data_regressor.predict(X_test)
Y_prediction

from sklearn.metrics import mean_squared_error, r2_score
mean_squared_error = mean_squared_error(Y_test, Y_prediction)

data_r2_regressor = r2_score(Y_test, Y_prediction)
data_r2_regressor

print(f"Mean Squared Error: ', {mean_squared_error}")

print(f"R2 Score: , {data_r2_regressor}")

plt.scatter(Y_test, Y_prediction)

plt.figure(figsize=(12, 5))
plt.scatter(X_train, Y_train, color='blue', label='Training data')
plt.plot(X_train, data_regressor.predict(X_train), color='red', label='Regression line')
plt.xlabel('TV Advertising Budget ($)')
plt.ylabel('Sales ($)')
plt.title('Linear Regression on Training Data')
plt.legend()
plt.show()

plt.figure(figsize=(12, 5))
plt.scatter(Y_test, Y_prediction, color='blue')
plt.plot([Y.min(), Y.max()], [Y.min(), Y.max()], color='green')
plt.xlabel('Actual Values')
plt.ylabel('Predicted Values')
plt.title('Actual Values vs Predicted Values')
plt.show()

